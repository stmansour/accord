Instructions to setup a new Windows Jenkins Instance

1. Log into the new Windows Server as Administrator

2. Turn off windows web security (this is for Windows 2008, similar for older versions)
	- click on Server Manager icon
	- click on "Configure this local server"
	- under Properties, click on "IE Enhanced Security Configuration   on"
	  NOTE: you may have to increase the size of the window to find it.
	  It's in the second column, 6th line down
	- click "on", in the dialog box turn Off security for Administrators and Users
	  then click OK.

3. Use IE to go to:
   http://ec2-52-6-164-191.compute-1.amazonaws.com/artifactory
   login in as user: accord
             passwd: developer

4. Click the Artifacts tab and browse to ext-tools/utils then click the Download
   button for each file listed below.  The default IE window size is
   not wide enough. You will need to widen it before the Download button comes 
   into view.  Note that IE pops up a dialog box at the bottom of the page. You
   will need to click Save to actually save the files.

	wget64.exe
	setup-win-jenkins.bat

5. Go to the Start page and open cmd.exe. Go to C:\Users\Administrators\Downloads

6. Do a 'dir' command and make sure that wget64.exe and setup-win-jenkins.bat
   are there.
   
7. Run setup-win-jenkins.bat

8. Upon completion
	A. Jenkins will be available on port 8080
	B. Java 1.8 is installed, JAVA_HOME set, java and javac are in the path
	C. Gradle is installed, GRADLE_HOME is set

9. Install Git for windows

10. When the script completes, the jenkins service should be running and you should
    be able to point a browser at the new instance and see jenkins.  For this example,
    the url would be:

	http://ec2-52-0-148-174.compute-1.amazonaws.com:8080/

11. Next, we must configure Jenkins. <<need to figure out automation for this>>
     	- click Manage Jenkins
	- click Enable Security
	- Jenkins' own user database
	- uncheck 'Allow users to sign up'   (we'll add the folks we want)
	- Logged-in users can do anything    (we'll review this later)
	- Save

    This should lead to a Sign up page.  Add the admin user, then click
    Manage Jenkins again, then Manage Users, then add the remaining users.
 
	- Update all the plugins that need updating (they're on the first tab)
	  don't reboot just yet.
	- go to the Available tab, filter with 'github ', then check the GitHub plugin
	- click 'Download now and install after restart' . this will take a few mins

    Under Git, set "Path to Git executable" to point to the git.exe file:
    	c:\Program Files (x86)\Git\cmd\git.exe

    Under Gradle - they ask for GRADLE_HOME but it doesn't work. It seems like
    gradle needs to be in the global path before things will work. As this has
    caused untold grief in the .bat file development, we'll need to set it by hand
    until we work out the fix.

    This should be enough to create a job and make sure your installation is
    functioning.  Here's a sample repository: git@github.com:stmansour/sort.git

12. Add any further plugins we want for Jenkins and restart.  Currently, for
    Java development we use:
	- Jacoco coverage report
	- Violations plugin
	- Artifactory plugin
	- Gradle plugin
	- GIT plugin

 11. Configure Jenkins - (for windows...)
	jdk	- name: JDK 1.8
	          JAVA_HOME:  c:\Program Files\Java\jdk1.8.0_51
        git	- name: git version 1.9.5 mysysgit.1
                  path: c:\Program Files (x86)\Git\cmd
        gradle 	- name: Gradle 2.6
		  GRADLE_HOME:  c:\Accord\gradle

11.5 NOTE - if git hangs when Jenkins first invokes it, several problems
     may exist:
     	a) there may not be any credentials in the .ssh directory. The
	   credentials should be in ottoaccord.tar
	b) if the creds exist, the host we're trying to contact may
	   not be in the known_hosts file. The easiest way to fix this up
	   is to copy the lines from another known_hosts file into the one
	   jenkins uses.
	c) on WINDOWS... the location for the .ssh directory is in the
	   inexplicable and completely non-obvious directory:

	   	c:\Windows\SysWOW64\config\systemprofile\

 12. In GitHub, add the webhook in so that Jenkins builds automatically.
     On the GitHub UI, go to the repo for which you want to set up the automated
     build, on the right side of the screen click "Settings", then click
     "Webhooks & Services". Under the Services list on the left side click the
     "Add Service" dropdown, in the filter area type "Jenkins", and select
     "Jenkins (GitHub plugin).

     There can only be only 1 GitHub webhook per repo (this is unfortunate).
     If you already have one and you try to add
     a second, "Jenkins (GitHub plugin)" will not be listed under Add Service

     After adding the Jenkins GitHub plugin service, configure it with the
     URL to jenkins. It will be something like:
	http://ec2-52-0-148-174.compute-1.amazonaws.com/github-webhook/
     In Jenkins, go to Manage Jenkins, then Configure System, at the bottom
     of the page under GitHub Web Hook, select "Manually manage hook URLs" then click
     the help button (?) on the right. It will list the URL to use.
     
